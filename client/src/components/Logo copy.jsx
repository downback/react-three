/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useLayoutEffect } from "react"
import { useGLTF, useScroll } from "@react-three/drei"
import { useFrame } from "@react-three/fiber"
import gsap from "gsap"

export function Logo(props) {
  const { nodes, materials } = useGLTF("/nami.gltf")
  const logo = useRef()
  const scroll = useScroll()
  const tl = useRef()

  useFrame((state, delta) => {
    tl.current.seek(scroll.offset * tl.current.duration())
  })

  useLayoutEffect(() => {
    tl.current = gsap.timeline({
      defaults: { duration: 2, ease: "power1.inOut" },
    })

    tl.current
      .to(logo.current.rotation, { y: -1 }, 2)
      .to(logo.current.position, { x: 1 }, 2)

      .to(logo.current.rotation, { y: 1 }, 6)
      .to(logo.current.position, { x: -1 }, 6)

      .to(logo.current.rotation, { y: 0 }, 11)
      .to(logo.current.rotation, { x: 1 }, 11)
      .to(logo.current.position, { x: 0 }, 11)

      .to(logo.current.rotation, { y: 0 }, 13)
      .to(logo.current.rotation, { x: -1 }, 13)
      .to(logo.current.position, { x: 0 }, 13)

      .to(logo.current.rotation, { y: 0 }, 16)
      .to(logo.current.rotation, { x: 0 }, 16)
      .to(logo.current.position, { x: 0 }, 16)

      .to(logo.current.rotation, { y: 0 }, 20)
      .to(logo.current.rotation, { x: 0 }, 20)
      .to(logo.current.position, { x: 0 }, 20)
  }, [])

  return (
    <group {...props} dispose={null} ref={logo}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.mesh_0.geometry}
        material={nodes.mesh_0.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.mesh_1.geometry}
        material={nodes.mesh_1.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.mesh_2.geometry}
        material={nodes.mesh_2.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.mesh_3.geometry}
        material={nodes.mesh_3.material}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.mesh_4.geometry}
        material={nodes.mesh_4.material}
      />
    </group>
  )
}

useGLTF.preload("/nami.gltf")
